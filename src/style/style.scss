@use 'sass:math';

@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Azeret+Mono:wght@500&display=swap');
// @import url('https://fonts.googleapis.com/css2?family=Azeret+Mono:ital,wght@1,500&display=swap');

@import '~normalize.css/normalize';
@import ' ~rfs/scss';
@import './constants';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow: hidden;
}

html,
body {
  height: 100%;
  font-family: 'Rubik', sans-serif;
  background: $image-bg-color;
}

.games {
  z-index: 200;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: $pri-bg-color;
  padding: 2rem;
  padding-top: $header-height + 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 2rem;
  height: 100%;
  transition: transform 0.8s cubic-bezier(0.16, 1, 0.3, 1);
  .header {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: space-between;
    top: 0;
    left: 0;
    width: 100%;
    height: $header-height;
    background: $sec-bg-color;
    padding-inline: $header-padding * 2;
  }
  .logo {
    display: flex;
    align-items: center;
    width: fit-content;
    padding-right: $header-padding;
    a {
      z-index: 50;
      background: $sec-bg-color;
      transition: transform 1s cubic-bezier(0.16, 1, 0.3, 1);
      transform-origin: left;
      padding-right: math.div($header-padding, 2);
      cursor: pointer;
    }
    svg {
      height: $header-height - $header-padding;
    }

    h1 {
      transform: translate(0.4rem, -7%);
      transition: transform 1s cubic-bezier(0.16, 1, 0.3, 1);
      color: #999;
      white-space: nowrap;
      z-index: 15;
      font-size: 1.5rem;
      overflow: visible;
    }
    &:hover {
      h1 {
        transform: translate(-115%, -7%);
      }
      a {
        transform: scale(0.9);
      }
    }
  }
  a {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.6rem;
    overflow: visible;
    color: #999;
    // text-decoration: none;
    transform-origin: right;
    transition: 0.3s cubic-bezier(0.16, 1, 0.3, 1);

    h2 {
      font-size: 1.2rem;
      overflow: visible;
      transition: 0.3s cubic-bezier(0.16, 1, 0.3, 1);
      letter-spacing: 1px;
    }
    svg {
      height: 2rem;
      transition: 0.3s cubic-bezier(0.16, 1, 0.3, 1);
    }
    &:hover {
      color: #000;
      transform: scale(0.9);
    }
  }
  .cards-container {
    background-color: $sec-bg-color;
    border-radius: $bar-border-radius;
    display: flex;
    gap: 2rem;
    padding: 2rem;
    .game-card {
      position: relative;
      overflow: hidden;
      border-radius: $bar-border-radius;
      box-shadow: 0 0.2rem 0.8rem 0.2rem rgba($color: #000000, $alpha: 0.2);
      img {
        max-width: 100%;
        display: block;
        transform: scale(1.07);
        filter: blur(3px);
        transition: transform 0.9s cubic-bezier(0.16, 1, 0.3, 1),
          filter 0.1s ease-out;
        object-fit: cover;
        width: 100%;
      }
      .text {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background: $card-bg-color;
        display: flex;
        justify-content: space-between;
        padding-inline: 1rem;
        font-size: $card-font-size;
        color: $card-font-pri-color;
        font-weight: 500;
        justify-content: center;
        height: 100%;
        align-items: center;
        transition: 0.9s cubic-bezier(0.16, 1, 0.3, 1);
        span:first-child {
          color: $card-font-sec-color;
          position: absolute;
          left: 0;
          transform: translateX(-40%);
          font-size: 18rem;
          opacity: 0.8;
          transition: 0.4s cubic-bezier(0.16, 1, 0.3, 1);
        }
        .game-title {
          color: $card-font-pri-color;
        }
      }
      &:not(.in-transition) {
        cursor: pointer;
        &:hover,
        &.loading {
          img {
            transform: scale(1);
            filter: blur(0px);
          }
          .text {
            background: $card-bg-hover-color;
            height: $card-font-size + $card-inline-padding * 2;
          }
          span:first-child {
            opacity: 0;
          }
        }
      }
    }

    .loader {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 7rem;
      height: 0.5rem;
      animation: flip 1s infinite;
      background: #dc241f;
      box-shadow: 0 0 0.8rem 0.2rem rgba($color: #dc241f, $alpha: 0.6);
      z-index: 100;
    }

    @keyframes flip {
      0% {
        transform: translate(-50%, -50%) rotate(0);
      }

      // 50% {
      //   transform: translate(-50%, -50%) rotateY(180deg);
      // }

      100% {
        transform: translate(-50%, -50%) rotateY(180deg);
        // transform: translate(-50%, -50%) rotateY(180deg) rotateX(180deg);
      }
    }
  }
}

.game {
  height: 100vh;
  width: 100vw;
  transform-origin: 0px 0px;
  transform: scale(1) translate(0px, 0px);
  display: flex;
  justify-content: center;
}

.game > img {
  position: absolute;
  max-width: 100%;
  max-height: 100%;
}

.overlay {
  height: 100%;
  width: 100%;
  pointer-events: none;
  background-color: transparent;
  position: fixed;
  z-index: 10;
}

.end-card {
  color: $bar-font-color;
  font-size: 2rem;
  display: flex;
  position: fixed;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.2rem;
  top: 50%;
  left: 50%;
  height: 100%;
  width: 100%;
  transform: translate(-50%, -50%);
  transition: 0.4s ease-in-out;
  font-weight: 500;
  .score {
    display: flex;
    font-size: 1.6rem;
    font-weight: 400;
  }
}

.btns {
  display: flex;
  gap: 1.5rem;
  padding: 1rem;
}

.levels,
.play-again {
  display: flex;
  justify-content: center;
  font-weight: 500;
  cursor: pointer;
  height: $bar-content-size;
  border-radius: $bar-border-radius;
  background: $bar-lighter-color;
  display: flex;
  justify-content: center;
  align-items: center;
  padding-inline: $bar-spacing;
  box-shadow: $top-bar-shadow;
  gap: 0.3rem;
  span {
    display: flex;
    align-items: center;
    font-size: 0.8 * $bar-font-size;
    line-height: 0.8 * $bar-font-size;
    padding-top: 0.1 * $bar-font-size;
  }
  &:hover {
    background: $hover-color;
    .arrow {
      transform: scale(1.2);
    }
    .round-arrow {
      transform: rotate(140deg) scale(1.1);
      &::after {
        background: $hover-color;
      }
    }
  }
}

.play-again {
  gap: 0.6rem;
}

.round-arrow {
  height: math.div($bar-icon-size, 1.1);
  width: math.div($bar-icon-size, 1.1);
  position: relative;
  border-radius: 50%;
  border: 2px $bar-font-color solid;
  transition: 0.1s ease-in-out;
  z-index: 40;
  overflow: visible;
  transform: rotate(100deg);
  &::after {
    content: '';
    top: 50%;
    left: 0;
    transform: translate(-2px, -50%) perspective(8px) rotateY(45deg);
    position: absolute;
    background: $bar-lighter-color;
    // background: red;
    height: math.div($bar-icon-size, 2.5);
    width: math.div($bar-icon-size, 2);
    border-radius: 3px;
  }
  .tip {
    position: absolute;
    bottom: 0;
    left: 0;
    height: math.div($bar-icon-size, 1.5);
    width: math.div($bar-icon-size, 1.5);
    transform: translate(-35%, 40%) rotate(28deg);
    z-index: 50;
    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 50%;
      height: 2px;
      top: 50%;
      left: 50%;
      background-color: $bar-font-color;
    }
    &::before {
      top: calc(50% + 1px);
      transform-origin: top left;
      transform: translate(-50%, -50%) rotate(-50deg);
    }
    &::after {
      top: calc(50% - 1px);
      transform-origin: bottom left;
      transform: translate(-50%, -50%) rotate(50deg);
    }
  }
}

.arrow {
  height: $bar-icon-size;
  width: $bar-icon-size;
  position: relative;
  transition: 0.1s ease-in-out;
  transform: translateX(10%);
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 50%;
    height: 2px;
    top: 50%;
    left: 50%;
    background-color: $bar-font-color;
  }
  &::before {
    top: calc(50% + 1px);
    transform-origin: top left;
    transform: translate(-50%, -50%) rotate(-50deg);
  }
  &::after {
    top: calc(50% - 1px);
    transform-origin: bottom left;
    transform: translate(-50%, -50%) rotate(50deg);
  }
}

.top-bar {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  overflow: visible;
  background: $card-bg-hover-color;
  height: $bar-content-size + $bar-spacing * 2;
  transition: 1.2s cubic-bezier(0.16, 1, 0.3, 1);
  backdrop-filter: blur(0px);
  > div {
    transition: 0.4s ease-in-out;
    opacity: 1;
  }
  &.end {
    backdrop-filter: blur(5px);
    height: 100%;
    > div {
      transition: 0.4s ease-in-out;
      opacity: 0;
    }
  }
  .characters {
    display: flex;
    gap: $bar-spacing;
    // margin-left: $bar-spacing;
    padding: $bar-spacing;
    // border-radius: $bar-border-radius * 2;
    // background: $bar-darker-color;
    img {
      box-shadow: $top-bar-shadow;
      transition: 0.6s ease-in-out;
      height: $bar-content-size;
      // width: $bar-content-size;
      border-radius: $bar-border-radius;
      background: $bar-lighter-color;
      animation-timing-function: cub ic-bezier(0.65, 0.05, 0.36, 1);
    }
    .success {
      background: $success-color;
      animation-duration: 0.7s;
      animation-name: success-animation;
    }
    .failure {
      background: $failure-color;
      animation-duration: 0.4s;
      animation-name: failure-animation;
    }
  }

  @keyframes success-animation {
    0% {
      transform: translateY(0);
    }
    25% {
      transform: translateY($bar-spacing * 0.25);
    }
    75% {
      transform: translateY(-$bar-spacing * 0.25);
    }
    100% {
      transform: translateY(0);
    }
  }

  @keyframes failure-animation {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX($bar-spacing * 0.25);
    }
    75% {
      transform: translateX(-$bar-spacing * 0.25);
    }
    100% {
      transform: translateX(0);
    }
  }

  // .game-title {
  //   display: flex;
  //   align-items: center;
  //   margin: 0 auto;
  //   padding: 0 $bar-spacing * 2;
  //   height: $bar-height * 0.5;
  //   background: $bar-darker-color;
  //   border-radius: $bar-border-radius * 1.5;
  //   color: $bar-font-color;
  //   font-size: $bar-font-size;
  //   font-weight: 500;
  // }

  .timer {
    color: $bar-font-color;
    // width: $bar-content-size * 3 + $bar-spacing * 2;
    height: $bar-content-size;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: $bar-border-radius;
    background: $bar-lighter-color;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-inline: $bar-spacing;
    // min-width: 76px;
    font-size: $bar-font-size;
    // width: $bar-content-size * 2 + $bar-spacing;
    box-shadow: $top-bar-shadow;
    font-family: 'Azeret Mono', monospace;
  }

  .info {
    display: flex;
    color: $bar-font-color;
    // background: $bar-darker-color;
    // gap: $bar-spacing;
    // margin-right: $bar-spacing;
    padding: $bar-spacing;
    // border-radius: $bar-border-radius * 2;

    div {
      // width: $bar-content-size * 3 + $bar-spacing * 2;
      height: $bar-content-size;
      border-radius: $bar-border-radius;
      background: $bar-lighter-color;
      display: flex;
      justify-content: center;
      align-items: center;
      padding-inline: $bar-spacing;
      box-shadow: $top-bar-shadow;
    }

    .timer {
      font-size: $bar-font-size;
      width: $bar-content-size * 2 + $bar-spacing;
      font-weight: 500;
    }
  }
}

.character-selector {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  z-index: 20;
  background: $bar-darker-color;
  display: flex;
  gap: $bar-spacing;
  padding: $bar-spacing;
  border-radius: $bar-border-radius * 2;
  flex-direction: column;
  user-select: none;
  button {
    cursor: pointer;
    display: flex;
    align-items: center;
    padding-right: $bar-spacing;
    gap: $bar-spacing;
    border-radius: $bar-border-radius;
    color: $bar-font-color;
    background: $bar-lighter-color;
    border: none;
    img {
      height: math.div($bar-content-size, 1.2);
      border-radius: $bar-border-radius;
      background: $bar-lighter-color;
    }
    &:hover {
      background-color: $hover-color;
      img {
        background-color: $hover-color;
      }
    }
    &:active {
      background-color: $active-color;
      img {
        background-color: $active-color;
      }
    }
  }
  .circle {
    position: fixed;
    pointer-events: none;
    border: 4px solid $bar-darker-color;
    background: none;
    border-radius: 50%;
  }
}

.active {
  pointer-events: all;
  visibility: visible;
}

.hidden {
  display: none !important;
}

@media (max-width: 1050px) {
  .games {
    padding: 1rem;
    padding-top: $header-height + 1rem;
    gap: 1rem;
    .cards-container {
      flex-direction: column;
      max-width: calc(400px - 3rem);
      padding: 1rem;
      gap: 1rem;
      .game-card {
        max-width: calc(400px - 2rem);
        img {
          max-width: calc(400px - 1rem);
        }
      }
    }
  }
}
